<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<TargetFramework>net8.0-windows10.0.19041</TargetFramework>
		<TargetPlatformMinVersion>10.0.18362.0</TargetPlatformMinVersion>
		<RootNamespace>Uno.Gallery.Windows</RootNamespace>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<Platforms>x86;x64;arm64</Platforms>
		<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
		<PublishProfile>win-$(Platform).pubxml</PublishProfile>
		<UseWinUI>true</UseWinUI>
		<DefineConstants>$(DefineConstants);WINDOWS</DefineConstants>
		<EnableMsixTooling>true</EnableMsixTooling>
	</PropertyGroup>
	<ItemGroup>
		<IncludeXamlNamespaces Include="not_mobile" Visible="False" />
		<ExcludeXamlNamespaces Include="mobile" Visible="False" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="CommunityToolkit.WinUI.Lottie" />
		<PackageReference Include="CommunityToolkit.WinUI.UI.Controls" />
		<PackageReference Include="CommunityToolkit.WinUI.UI.Controls.DataGrid" />
		<PackageReference Include="Uno.Cupertino.WinUI" />
		<PackageReference Include="Uno.Material.WinUI" />
		<PackageReference Include="Uno.ShowMeTheXAML" />
		<PackageReference Include="Uno.ShowMeTheXAML.MSBuild" />
		<PackageReference Include="Microsoft.WindowsAppSDK" />
		<PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
		<PackageReference Include="Microsoft.Extensions.Logging" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" />
		<PackageReference Include="Microsoft.Extensions.Logging.Console" />
		<PackageReference Include="nventive.Nimue.Application.Packaging">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Uno.Core.Extensions.Compatibility" />
		<PackageReference Include="Uno.Core.Extensions.Logging.Singleton" />
		<PackageReference Include="Uno.Toolkit.Skia.WinUI" />
		<PackageReference Include="Uno.Toolkit.WinUI" />
		<PackageReference Include="Uno.Toolkit.WinUI.Cupertino">
		</PackageReference>
		<PackageReference Include="Uno.Toolkit.WinUI.Material">
		</PackageReference>
		<PackageReference Include="Uno.WinUI">
		</PackageReference>
		<Manifest Include="$(ApplicationManifest)" />
	</ItemGroup>

	<ItemGroup>
		<!-- We build WinUI project with Platform=x86 due to a CommunityToolkit bug -->
		<!-- https://github.com/CommunityToolkit/Lottie-Windows/issues/515#issuecomment-1662305826 -->
		<!-- If the source generator project is built with x86, the compiler fails to load the generator assembly, so we force AnyCPU here -->
		<ProjectReference Include="..\..\Uno.Gallery.SourceGenerators\Uno.Gallery.SourceGenerators.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" SetPlatform="Platform=AnyCPU" />
	</ItemGroup>

	<!--
    Defining the "Msix" ProjectCapability here allows the Single-project MSIX Packaging
    Tools extension to be activated for this project even if the Windows App SDK Nuget
    package has not yet been restored.
  -->
	<ItemGroup Condition="'$(DisableMsixProjectCapabilityAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<ProjectCapability Include="Msix" />
	</ItemGroup>

	<!--
    Defining the "HasPackageAndPublishMenuAddedByProject" property here allows the Solution
    Explorer "Package and Publish" context menu entry to be enabled for this project even if
    the Windows App SDK Nuget package has not yet been restored.
  -->
	<PropertyGroup Condition="'$(DisableHasPackageAndPublishMenuAddedByProject)'!='true' and '$(EnableMsixTooling)'=='true'">
		<HasPackageAndPublishMenu>true</HasPackageAndPublishMenu>
	</PropertyGroup>
	<Import Project="..\Uno.Gallery.Shared\Uno.Gallery.Shared.projitems" Label="Shared" />
</Project>
